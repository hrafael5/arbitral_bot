// Script para testar o envio de emails
require('dotenv').config();

const { testConnection, sendPasswordResetEmail } = require('./utils/emailService');

async function testEmailSystem() {
  console.log('üöÄ Iniciando teste do sistema de email...\n');
  
  // Teste 1: Verificar configura√ß√µes
  console.log('üìã Configura√ß√µes atuais:');
  console.log(`SMTP_HOST: ${process.env.SMTP_HOST}`);
  console.log(`SMTP_PORT: ${process.env.SMTP_PORT}`);
  console.log(`SMTP_SECURE: ${process.env.SMTP_SECURE}`);
  console.log(`SMTP_USER: ${process.env.SMTP_USER}`);
  console.log(`FROM_EMAIL: ${process.env.FROM_EMAIL}`);
  console.log(`APP_BASE_URL: ${process.env.APP_BASE_URL}\n`);
  
  // Teste 2: Conex√£o SMTP
  console.log('üîç Teste 1: Verificando conex√£o SMTP...');
  const connectionOk = await testConnection();
  
  if (!connectionOk) {
    console.log('‚ùå Falha na conex√£o SMTP. Verifique as configura√ß√µes.');
    return;
  }
  
  // Teste 3: Envio de email de teste
  console.log('\nüîç Teste 2: Enviando email de teste...');
  try {
    const testEmail = process.env.SMTP_USER; // Enviar para o pr√≥prio email
    const testToken = 'test-token-123456789';
    
    await sendPasswordResetEmail(testEmail, testToken);
    console.log('‚úÖ Email de teste enviado com sucesso!');
    console.log('üìß Verifique sua caixa de entrada e spam.');
    
  } catch (error) {
    console.error('‚ùå Falha ao enviar email de teste:', error.message);
  }
  
  console.log('\nüèÅ Teste conclu√≠do!');
}

// Executar o teste
testEmailSystem().catch(console.error);

